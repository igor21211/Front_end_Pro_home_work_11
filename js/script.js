'use strict'
//Вивести числа від 20 до 30 через пропуск, використовуючи крок 0,5 (20 20,5 21 21,5….).
const showNumber = () => {
    for (let i = 20; i <= 30; i += 0.5) {
        console.log(i)
    }
}
//Один долар коштує 27 гривень. Вивести дані з розрахунком вартості 10, 20, 30... 100 доларів.
const showPriceDollar = () => {
    for (let i = 10; i <= 100; i += 10) {
        console.log(`${i} dollars cost: ${i * 27}`)
    }
}
//Дане ціле число. Вивести всі цілі числа від 1 до 100, квадрат яких не перевищує числа N.
const squartNumber = (num) => {
    for (let i = 1; i <= 100; i++) {
        if (i * i < num) {
            console.log(`${i * i} не перевищує число ${num}`)
        }
    }
}

//Дане ціле число. З'ясувати, чи є воно простим (простим називається число, більше 1, які не мають інших дільників крім 1 і себе).
const checkNumber = (num) => {
    if (num <= 1) {
        return `${num} не є простим числом.`
    }
    for (let i = 2; i < Math.sqrt(num); i++) {
        if (num % i == 0) {
            return `${num} не є простим числом.`
        }
    }
    return `${num} є простим числом.`
}

//Дане деяке число. Визначити, чи можна одержати це число шляхом зведення числа 3 у деякий ступінь. (Наприклад, числа 9, 81 можна отримати, а 13 - не можна).
const checkNumberStp = (num) => {
    if (num <= 0) {
        return false;
    }
    while (num > 1) {
        if (num % 3 !== 0) {
            return false;
        }
        num /= 3;
    }
    return true;
}

showNumber();
showPriceDollar();
squartNumber(400);
console.log(checkNumber(1));
console.log(checkNumberStp(9) ? `Можна з числа ${9} одержати це число шляхом зведення числа 3 у деякий ступінь.` : `Не можна ${9} одержати це число шляхом зведення числа 3 у деякий ступінь.`)
console.log(checkNumberStp(13) ? `Можна з числа ${13} одержати це число шляхом зведення числа 3 у деякий ступінь.` : `Не можна ${13} одержати це число шляхом зведення числа 3 у деякий ступінь.`)


